<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="activerecord" type="Castle.ActiveRecord.Framework.Config.ActiveRecordSectionHandler, Castle.ActiveRecord"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
	</configSections>
	<activerecord default-lazy="false">
		<config>
			<add key="hibernate.connection.driver_class" value="NHibernate.Driver.SqlClientDriver"/>
			<add key="hibernate.dialect" value="NHibernate.Dialect.MsSql2000Dialect"/>
			<add key="hibernate.connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
			<add key="hibernate.connection.connection_string" value="Data Source=.;Initial Catalog=GROUP;Integrated Security=True"/>
		</config>
    <config type="Com.Zfrong.Data.AR.Base.Entity.Base2,Com.Zfrong.Data.AR">
      <add key="hibernate.connection.driver_class" value="NHibernate.Driver.SqlClientDriver"/>
      <add key="hibernate.dialect" value="NHibernate.Dialect.MsSql2000Dialect"/>
      <add key="hibernate.connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
      <add key="hibernate.connection.connection_string" value="Data Source=.;Initial Catalog=CommData;Integrated Security=True"/>
    </config>
	</activerecord>
  <log4net>
    <!-- Define some output appenders -->
    <appender name="trace" type="log4net.Appender.TraceAppender, log4net">
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p %c [%x] &lt;%P{user}&gt; - %m%n"/>
      </layout>
    </appender>
    <appender name="console" type="log4net.Appender.ConsoleAppender, log4net">
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p %c [%x] &lt;%P{user}&gt; - %m%n"/>
      </layout>
    </appender>
    <appender name="RollingFile.ALL" type="Com.Zfrong.Log.MyRollingFileAppender" level="ALL">
      <param name="File" value="log\\ALL\\"/>
      <param name="Threshold" value="ALL"/>
    </appender>
  <appender name="RollingFile.DEBUG" type="Com.Zfrong.Log.MyRollingFileAppender" level="DEBUG">
    <param name="File" value="log\\DEBUG\\"/>
    <param name="Threshold" value="DEBUG"/>
  </appender>
  <appender name="RollingFile.INFO" type="Com.Zfrong.Log.MyRollingFileAppender" level="INFO">
    <param name="File" value="log\\INFO\\"/>
    <param name="Threshold" value="INFO"/>
  </appender>
  <appender name="RollingFile.WARN" type="Com.Zfrong.Log.MyRollingFileAppender" level="WARN">
    <param name="File" value="log\\WARN\\"/>
    <param name="Threshold" value="WARN"/>
  </appender>
  <appender name="RollingFile.ERROR" type="Com.Zfrong.Log.MyRollingFileAppender" level="ERROR">
    <param name="File" value="log\\Error\\"/>
    <param name="Threshold" value="ERROR"/>
  </appender>
  <appender name="RollingFile.FATAL" type="Com.Zfrong.Log.MyRollingFileAppender" level="FATAL">
    <param name="File" value="log\\FATAL\\"/>
    <param name="Threshold" value="FATAL"/>
  </appender>
  <appender name="RollingFile.App" type="Com.Zfrong.Log.MyRollingFileAppender">
    <param name="File" value="AppLog\\"/>
    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="%m%n%n"/>
    </layout>
  </appender>
    <root>
        <!-- priority value can be set to Level值：ALL/DEBUG/INFO/WARN/ERROR/FATAL/OFF -->
      <priority value="OFF"/>
      <appender-ref ref="RollingFile.ALL"/>
      <appender-ref ref="RollingFile.DEBUG"/>
      <appender-ref ref="RollingFile.INFO"/>
      <appender-ref ref="RollingFile.WARN"/>
      <appender-ref ref="RollingFile.ERROR"/>
      <appender-ref ref="RollingFile.FATAL"/>
    </root>
  <logger name="AppLog">
    <appender-ref ref="RollingFile.App"/>
  </logger>
</log4net>
  <!--<nhibernate>
    --><!-- with this set to true, SQL statements will output to the console window if it's a console app --><!--
    <add key="hibernate.show_sql" value="true" />
  </nhibernate>-->
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
